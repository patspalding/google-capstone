percentChange[nrow(percentChange) + 1,] <- list(i,(last - first)/first*100,length(filter(fullData,Id==i)$WeightPounds) > 30)
View(percentChange)
percentChange[nrow(percentChange) + 1,] <- list(i,(last - first)/first*100,
length(filter(fullData,Id==i)$WeightPounds) > 30)
View(percentChange)
ggsave("r_images/weight_percent_change.png")
# Plot percent change in weight
percentChange %>%
ggplot(aes(x=Id,y=Change,color = FrequentUser,fill = FrequentUser)) +
geom_bar(stat = 'identity') +
ylab("Percent Change in Weight") +
theme(axis.text.x = element_text(angle = 90, hjust = 0, vjust = 0)) +
scale_color_manual(name='Frequent User',values = setNames(c('red4','blue4'),c(T, F))) +
scale_fill_manual(name='Frequent User',values = setNames(c('red','blue'),c(T, F)))
# Import libraries
library(tidyverse)
library(skimr)
dailyActivity1 <- read_csv("Fitabase Data 3.12.16-4.11.16/dailyActivity_merged.csv")
dailyActivity2 <- read_csv("Fitabase Data 4.12.16-5.12.16/dailyActivity_merged.csv")
weightLog1 <- read_csv("Fitabase Data 3.12.16-4.11.16/weightLogInfo_merged.csv")
weightLog2 <- read_csv("Fitabase Data 4.12.16-5.12.16/weightLogInfo_merged.csv")
# Merge weight data, keeping ID, date, weight in pounds, and
# if the weight log was manual or not
keep_weight <- c('Id','Date','WeightPounds','IsManualReport')
weightLog <- rbind(weightLog1, weightLog2)[keep_weight]
filter(weightLog,Id==6962181067)
# Repeat for daily activity data, keeping all columns
activityData <- rbind(dailyActivity1, dailyActivity2)
activityData <- activityData %>%
mutate(WeightedActiveMinutes = 0.2*LightlyActiveMinutes +
FairlyActiveMinutes + 5*VeryActiveMinutes)
activityData <- activityData %>%
mutate(TotalActiveMinutes = LightlyActiveMinutes +
FairlyActiveMinutes + VeryActiveMinutes)
keep_activity <- c('Id','Date','SedentaryMinutes','Calories',
'TotalActiveMinutes','WeightedActiveMinutes')
# Transform the actvity date strings and weight log datetime strings into
# datetime data, then extract just the date for easier matching when
# both datasets are merged
activityData$ActivityDate <- as.Date(as.POSIXct(activityData$ActivityDate,
format="%m/%d/%Y"))
weightLog$Date <- as.Date(as.POSIXct(weightLog$Date,
format="%m/%d/%Y %I:%M:%S %p"),
tz = "Etc/GMT+8")
filter(weightLog,Id==6962181067)
# Rename the column "ActivityDate" to "Date" for ease of merging
activityData <- activityData %>% rename(Date = ActivityDate)
# Merge data frames into single data frame
fullData <- merge(activityData[keep_activity],weightLog,by=c("Id","Date"),
all.y = TRUE)
fullData$Id <- as.character(fullData$Id)
# Find number of unique users, and store the unique IDs in a list for later use
n_unique(fullData$Id)
id_list <- unique(fullData$Id)
# Plot number of weight logs by each user ID; "frequent users" are denoted in red
# and "average users" are denoted in blue
fullData$Id %>% as.data.frame %>%
rename(Id='.') %>%
group_by(Id) %>% summarise(N=n()) %>%
ggplot(aes(x=Id,y=N,color = N > 30,fill = N > 30)) +
geom_bar(stat = 'identity') +
ylab("Number of Weight Logs") +
theme(axis.text.x = element_text(angle = 90, hjust = 0, vjust = 0)) +
scale_color_manual(name='N > 30',values = setNames(c('red4','blue4'),c(T, F))) +
scale_fill_manual(name='N > 30',values = setNames(c('red','blue'),c(T, F)))
ggsave("r_images/log_counts.png")
# Set up data frame for storing percent change in weight for users
percentChange <- data.frame(Id=character(),Change=double(),FrequentUser=logical())
for (i in id_list) {
# Line color is blue for "average users" and red for "frequent users"
line_col = ifelse(length(filter(fullData,Id==i)$WeightPounds) > 30,'red','blue')
if (length(filter(fullData,Id==i)$WeightPounds) > 1){
ggplot(data=filter(fullData,Id==i)) +
geom_smooth(aes(Date,WeightPounds),method = "lm",color=line_col) +
geom_point(aes(Date,WeightPounds),color = 'black') +
ylab("Weight (Lbs)") +
ggtitle(sprintf("Weight over Time for ID %s", i)) +
theme(plot.title = element_text(hjust = 0.5))
ggsave(sprintf("r_images/%s_weight.png", i))
# Get percent change in weight using the initial and final weight measurements
first = dplyr::first(filter(fullData,Id==i)$WeightPounds)
last = dplyr::last(filter(fullData,Id==i)$WeightPounds)
percentChange[nrow(percentChange) + 1,] <- list(i,(last - first)/first*100,
length(filter(fullData,Id==i)$WeightPounds) > 30)
}
if (length(filter(fullData,Id==i)$SedentaryMinutes) > 1){
ggplot(data=filter(fullData,Id==i)) +
geom_smooth(aes(Date,SedentaryMinutes),method = "lm",color=line_col) +
geom_line(aes(Date,SedentaryMinutes),color = 'black') +
ylab("Minutes Spent Sedentary") +
ggtitle(sprintf("Daily Minutes Spent Sedentary for ID %s", i)) +
theme(plot.title = element_text(hjust = 0.5))
ggsave(sprintf("r_images/%s_sedentary.png", i))
}
if (length(filter(fullData,Id==i)$TotalActiveMinutes) > 1){
ggplot(data=filter(fullData,Id==i)) +
geom_smooth(aes(Date,TotalActiveMinutes),method = "lm",color=line_col) +
geom_line(aes(Date,TotalActiveMinutes),color = 'black') +
ylab("Total Active Minutes") +
ggtitle(sprintf("Daily Minutes Spent Active for ID %s", i)) +
theme(plot.title = element_text(hjust = 0.5))
ggsave(sprintf("r_images/%s_total_activity.png", i))
}
if (length(filter(fullData,Id==i)$WeightedActiveMinutes) > 1){
ggplot(data=filter(fullData,Id==i)) +
geom_smooth(aes(Date,WeightedActiveMinutes),method = "lm",color=line_col) +
geom_line(aes(Date,WeightedActiveMinutes),color = 'black') +
ylab("Weighted Active Minutes") +
ggtitle(sprintf("Daily Minutes Spent Active for ID %s (Weighted)", i)) +
theme(plot.title = element_text(hjust = 0.5))
ggsave(sprintf("r_images/%s_weighted_activity.png", i))
}
}
# Plot percent change in weight
percentChange %>%
ggplot(aes(x=Id,y=Change,color = FrequentUser,fill = FrequentUser)) +
geom_bar(stat = 'identity') +
ylab("Percent Change in Weight") +
theme(axis.text.x = element_text(angle = 90, hjust = 0, vjust = 0)) +
scale_color_manual(name='Frequent User',values = setNames(c('red4','blue4'),c(T, F))) +
scale_fill_manual(name='Frequent User',values = setNames(c('red','blue'),c(T, F)))
ggsave("r_images/weight_percent_change.png")
# Plot percent change in weight
percentChange %>%
ggplot(aes(x=Id,y=Change,color = FrequentUser,fill = FrequentUser)) +
geom_bar(stat = 'identity') +
ylab("Percent Change in Weight") +
theme(axis.text.x = element_text(angle = 90, hjust = 0, vjust = 0)) +
scale_color_manual(name='Frequent User',values = setNames(c('red4','blue4'),c(T, F))) +
scale_fill_manual(name='Frequent User',values = setNames(c('red','blue'),c(T, F))) +
scale_y_continuous(labels = scales::percent)
ggsave("r_images/weight_percent_change.png")
percentChange[nrow(percentChange) + 1,] <- list(i,(last - first)/first,
length(filter(fullData,Id==i)$WeightPounds) > 30)
# Import libraries
library(tidyverse)
library(skimr)
dailyActivity1 <- read_csv("Fitabase Data 3.12.16-4.11.16/dailyActivity_merged.csv")
dailyActivity2 <- read_csv("Fitabase Data 4.12.16-5.12.16/dailyActivity_merged.csv")
weightLog1 <- read_csv("Fitabase Data 3.12.16-4.11.16/weightLogInfo_merged.csv")
weightLog2 <- read_csv("Fitabase Data 4.12.16-5.12.16/weightLogInfo_merged.csv")
# Merge weight data, keeping ID, date, weight in pounds, and
# if the weight log was manual or not
keep_weight <- c('Id','Date','WeightPounds','IsManualReport')
weightLog <- rbind(weightLog1, weightLog2)[keep_weight]
filter(weightLog,Id==6962181067)
# Repeat for daily activity data, keeping all columns
activityData <- rbind(dailyActivity1, dailyActivity2)
activityData <- activityData %>%
mutate(WeightedActiveMinutes = 0.2*LightlyActiveMinutes +
FairlyActiveMinutes + 5*VeryActiveMinutes)
activityData <- activityData %>%
mutate(TotalActiveMinutes = LightlyActiveMinutes +
FairlyActiveMinutes + VeryActiveMinutes)
keep_activity <- c('Id','Date','SedentaryMinutes','Calories',
'TotalActiveMinutes','WeightedActiveMinutes')
# Transform the actvity date strings and weight log datetime strings into
# datetime data, then extract just the date for easier matching when
# both datasets are merged
activityData$ActivityDate <- as.Date(as.POSIXct(activityData$ActivityDate,
format="%m/%d/%Y"))
weightLog$Date <- as.Date(as.POSIXct(weightLog$Date,
format="%m/%d/%Y %I:%M:%S %p"),
tz = "Etc/GMT+8")
filter(weightLog,Id==6962181067)
# Rename the column "ActivityDate" to "Date" for ease of merging
activityData <- activityData %>% rename(Date = ActivityDate)
# Merge data frames into single data frame
fullData <- merge(activityData[keep_activity],weightLog,by=c("Id","Date"),
all.y = TRUE)
fullData$Id <- as.character(fullData$Id)
# Find number of unique users, and store the unique IDs in a list for later use
n_unique(fullData$Id)
id_list <- unique(fullData$Id)
# Plot number of weight logs by each user ID; "frequent users" are denoted in red
# and "average users" are denoted in blue
fullData$Id %>% as.data.frame %>%
rename(Id='.') %>%
group_by(Id) %>% summarise(N=n()) %>%
ggplot(aes(x=Id,y=N,color = N > 30,fill = N > 30)) +
geom_bar(stat = 'identity') +
ylab("Number of Weight Logs") +
theme(axis.text.x = element_text(angle = 90, hjust = 0, vjust = 0)) +
scale_color_manual(name='N > 30',values = setNames(c('red4','blue4'),c(T, F))) +
scale_fill_manual(name='N > 30',values = setNames(c('red','blue'),c(T, F)))
ggsave("r_images/log_counts.png")
# Set up data frame for storing percent change in weight for users
percentChange <- data.frame(Id=character(),Change=double(),FrequentUser=logical())
for (i in id_list) {
# Line color is blue for "average users" and red for "frequent users"
line_col = ifelse(length(filter(fullData,Id==i)$WeightPounds) > 30,'red','blue')
if (length(filter(fullData,Id==i)$WeightPounds) > 1){
ggplot(data=filter(fullData,Id==i)) +
geom_smooth(aes(Date,WeightPounds),method = "lm",color=line_col) +
geom_point(aes(Date,WeightPounds),color = 'black') +
ylab("Weight (Lbs)") +
ggtitle(sprintf("Weight over Time for ID %s", i)) +
theme(plot.title = element_text(hjust = 0.5))
ggsave(sprintf("r_images/%s_weight.png", i))
# Get percent change in weight using the initial and final weight measurements
first = dplyr::first(filter(fullData,Id==i)$WeightPounds)
last = dplyr::last(filter(fullData,Id==i)$WeightPounds)
percentChange[nrow(percentChange) + 1,] <- list(i,(last - first)/first,
length(filter(fullData,Id==i)$WeightPounds) > 30)
}
if (length(filter(fullData,Id==i)$SedentaryMinutes) > 1){
ggplot(data=filter(fullData,Id==i)) +
geom_smooth(aes(Date,SedentaryMinutes),method = "lm",color=line_col) +
geom_line(aes(Date,SedentaryMinutes),color = 'black') +
ylab("Minutes Spent Sedentary") +
ggtitle(sprintf("Daily Minutes Spent Sedentary for ID %s", i)) +
theme(plot.title = element_text(hjust = 0.5))
ggsave(sprintf("r_images/%s_sedentary.png", i))
}
if (length(filter(fullData,Id==i)$TotalActiveMinutes) > 1){
ggplot(data=filter(fullData,Id==i)) +
geom_smooth(aes(Date,TotalActiveMinutes),method = "lm",color=line_col) +
geom_line(aes(Date,TotalActiveMinutes),color = 'black') +
ylab("Total Active Minutes") +
ggtitle(sprintf("Daily Minutes Spent Active for ID %s", i)) +
theme(plot.title = element_text(hjust = 0.5))
ggsave(sprintf("r_images/%s_total_activity.png", i))
}
if (length(filter(fullData,Id==i)$WeightedActiveMinutes) > 1){
ggplot(data=filter(fullData,Id==i)) +
geom_smooth(aes(Date,WeightedActiveMinutes),method = "lm",color=line_col) +
geom_line(aes(Date,WeightedActiveMinutes),color = 'black') +
ylab("Weighted Active Minutes") +
ggtitle(sprintf("Daily Minutes Spent Active for ID %s (Weighted)", i)) +
theme(plot.title = element_text(hjust = 0.5))
ggsave(sprintf("r_images/%s_weighted_activity.png", i))
}
}
# Plot percent change in weight
percentChange %>%
ggplot(aes(x=Id,y=Change,color = FrequentUser,fill = FrequentUser)) +
geom_bar(stat = 'identity') +
ylab("Percent Change in Weight") +
theme(axis.text.x = element_text(angle = 90, hjust = 0, vjust = 0)) +
scale_color_manual(name='Frequent User',values = setNames(c('red4','blue4'),c(T, F))) +
scale_fill_manual(name='Frequent User',values = setNames(c('red','blue'),c(T, F))) +
scale_y_continuous(labels = scales::percent)
ggsave("r_images/weight_percent_change.png")
# Plot number of weight logs by each user ID; "frequent users" are denoted in red
# and "average users" are denoted in blue
fullData$Id %>%
rename(Id='.') %>%
group_by(Id) %>% summarise(N=n()) %>%
ggplot(aes(x=Id,y=N,color = N > 30,fill = N > 30)) +
geom_bar(stat = 'identity') +
ylab("Number of Weight Logs") +
theme(axis.text.x = element_text(angle = 90, hjust = 0, vjust = 0)) +
scale_color_manual(name='N > 30',values = setNames(c('red4','blue4'),c(T, F))) +
scale_fill_manual(name='N > 30',values = setNames(c('red','blue'),c(T, F)))
as.data.frame %>%
# Plot number of weight logs by each user ID; "frequent users" are denoted in red
# and "average users" are denoted in blue
fullData$Id %>% as.data.frame %>%
rename(Id='.') %>%
group_by(Id) %>% summarise(N=n()) %>%
ggplot(aes(x=Id,y=N,color = N > 30,fill = N > 30)) +
geom_bar(stat = 'identity') +
ylab("Number of Weight Logs") +
theme(axis.text.x = element_text(angle = 90, hjust = 0, vjust = 0)) +
scale_color_manual(name='N > 30',values = setNames(c('red4','blue4'),c(T, F))) +
scale_fill_manual(name='N > 30',values = setNames(c('red','blue'),c(T, F)))
# Plot percent change in weight
percentChange %>% order(Change) %>%
ggplot(aes(x=Id,y=Change,color = FrequentUser,fill = FrequentUser)) +
geom_bar(stat = 'identity') +
ylab("Percent Change in Weight") +
theme(axis.text.x = element_text(angle = 90, hjust = 0, vjust = 0)) +
scale_color_manual(name='Frequent User',values = setNames(c('red4','blue4'),c(T, F))) +
scale_fill_manual(name='Frequent User',values = setNames(c('red','blue'),c(T, F))) +
scale_y_continuous(labels = scales::percent)
# Plot percent change in weight
percentChange %>% order(percentChange$Change) %>%
ggplot(aes(x=Id,y=Change,color = FrequentUser,fill = FrequentUser)) +
geom_bar(stat = 'identity') +
ylab("Percent Change in Weight") +
theme(axis.text.x = element_text(angle = 90, hjust = 0, vjust = 0)) +
scale_color_manual(name='Frequent User',values = setNames(c('red4','blue4'),c(T, F))) +
scale_fill_manual(name='Frequent User',values = setNames(c('red','blue'),c(T, F))) +
scale_y_continuous(labels = scales::percent)
ggsave("r_images/weight_percent_change.png")
ggplot(data=percentChange,aes(x=Id,y=Change,color = FrequentUser,fill = FrequentUser)) +
geom_bar(stat = 'identity') +
ylab("Percent Change in Weight") +
theme(axis.text.x = element_text(angle = 90, hjust = 0, vjust = 0)) +
scale_color_manual(name='Frequent User',values = setNames(c('red4','blue4'),c(T, F))) +
scale_fill_manual(name='Frequent User',values = setNames(c('red','blue'),c(T, F))) +
scale_y_continuous(labels = scales::percent)
# Plot percent change in weight
percentChange<- order(percentChange$Change)
ggplot(data=percentChange,aes(x=Id,y=Change,color = FrequentUser,fill = FrequentUser)) +
geom_bar(stat = 'identity') +
ylab("Percent Change in Weight") +
theme(axis.text.x = element_text(angle = 90, hjust = 0, vjust = 0)) +
scale_color_manual(name='Frequent User',values = setNames(c('red4','blue4'),c(T, F))) +
scale_fill_manual(name='Frequent User',values = setNames(c('red','blue'),c(T, F))) +
scale_y_continuous(labels = scales::percent)
ggsave("r_images/weight_percent_change.png")
# Plot percent change in weight
percentChange<- order(percentChange$Change)
# Plot percent change in weight
percentChange<- order(Change)
# Plot percent change in weight
ggplot(data=percentChange[order(percentChange$Change)],
aes(x=Id,y=Change,color = FrequentUser,fill = FrequentUser)) +
geom_bar(stat = 'identity') +
ylab("Percent Change in Weight") +
theme(axis.text.x = element_text(angle = 90, hjust = 0, vjust = 0)) +
scale_color_manual(name='Frequent User',values = setNames(c('red4','blue4'),c(T, F))) +
scale_fill_manual(name='Frequent User',values = setNames(c('red','blue'),c(T, F))) +
scale_y_continuous(labels = scales::percent)
# Plot percent change in weight
ggplot(data=percentChange[order(percentChange$Change),],
aes(x=Id,y=Change,color = FrequentUser,fill = FrequentUser)) +
geom_bar(stat = 'identity') +
ylab("Percent Change in Weight") +
theme(axis.text.x = element_text(angle = 90, hjust = 0, vjust = 0)) +
scale_color_manual(name='Frequent User',values = setNames(c('red4','blue4'),c(T, F))) +
scale_fill_manual(name='Frequent User',values = setNames(c('red','blue'),c(T, F))) +
scale_y_continuous(labels = scales::percent)
# Plot percent change in weight
ggplot(data=percentChange[order(Change),],
aes(x=Id,y=Change,color = FrequentUser,fill = FrequentUser)) +
geom_bar(stat = 'identity') +
ylab("Percent Change in Weight") +
theme(axis.text.x = element_text(angle = 90, hjust = 0, vjust = 0)) +
scale_color_manual(name='Frequent User',values = setNames(c('red4','blue4'),c(T, F))) +
scale_fill_manual(name='Frequent User',values = setNames(c('red','blue'),c(T, F))) +
scale_y_continuous(labels = scales::percent)
ggsave("r_images/weight_percent_change.png")
# Import libraries
library(tidyverse)
library(skimr)
dailyActivity1 <- read_csv("Fitabase Data 3.12.16-4.11.16/dailyActivity_merged.csv")
dailyActivity2 <- read_csv("Fitabase Data 4.12.16-5.12.16/dailyActivity_merged.csv")
weightLog1 <- read_csv("Fitabase Data 3.12.16-4.11.16/weightLogInfo_merged.csv")
weightLog2 <- read_csv("Fitabase Data 4.12.16-5.12.16/weightLogInfo_merged.csv")
# Merge weight data, keeping ID, date, weight in pounds, and
# if the weight log was manual or not
keep_weight <- c('Id','Date','WeightPounds','IsManualReport')
weightLog <- rbind(weightLog1, weightLog2)[keep_weight]
filter(weightLog,Id==6962181067)
# Repeat for daily activity data, keeping all columns
activityData <- rbind(dailyActivity1, dailyActivity2)
activityData <- activityData %>%
mutate(WeightedActiveMinutes = 0.2*LightlyActiveMinutes +
FairlyActiveMinutes + 5*VeryActiveMinutes)
activityData <- activityData %>%
mutate(TotalActiveMinutes = LightlyActiveMinutes +
FairlyActiveMinutes + VeryActiveMinutes)
keep_activity <- c('Id','Date','SedentaryMinutes','Calories',
'TotalActiveMinutes','WeightedActiveMinutes')
# Transform the actvity date strings and weight log datetime strings into
# datetime data, then extract just the date for easier matching when
# both datasets are merged
activityData$ActivityDate <- as.Date(as.POSIXct(activityData$ActivityDate,
format="%m/%d/%Y"))
weightLog$Date <- as.Date(as.POSIXct(weightLog$Date,
format="%m/%d/%Y %I:%M:%S %p"),
tz = "Etc/GMT+8")
filter(weightLog,Id==6962181067)
# Rename the column "ActivityDate" to "Date" for ease of merging
activityData <- activityData %>% rename(Date = ActivityDate)
# Merge data frames into single data frame
fullData <- merge(activityData[keep_activity],weightLog,by=c("Id","Date"),
all.y = TRUE)
fullData$Id <- as.character(fullData$Id)
# Find number of unique users, and store the unique IDs in a list for later use
n_unique(fullData$Id)
id_list <- unique(fullData$Id)
# Plot number of weight logs by each user ID; "frequent users" are denoted in red
# and "average users" are denoted in blue
fullData$Id %>% as.data.frame %>%
rename(Id='.') %>%
group_by(Id) %>% summarise(N=n()) %>%
ggplot(aes(x=Id,y=N,color = N > 30,fill = N > 30)) +
geom_bar(stat = 'identity') +
ylab("Number of Weight Logs") +
theme(axis.text.x = element_text(angle = 90, hjust = 0, vjust = 0)) +
scale_color_manual(name='N > 30',values = setNames(c('red4','blue4'),c(T, F))) +
scale_fill_manual(name='N > 30',values = setNames(c('red','blue'),c(T, F)))
ggsave("r_images/log_counts.png")
# Set up data frame for storing percent change in weight for users
percentChange <- data.frame(Id=character(),Change=double(),FrequentUser=logical())
for (i in id_list) {
# Line color is blue for "average users" and red for "frequent users"
line_col = ifelse(length(filter(fullData,Id==i)$WeightPounds) > 30,'red','blue')
if (length(filter(fullData,Id==i)$WeightPounds) > 1){
ggplot(data=filter(fullData,Id==i)) +
geom_smooth(aes(Date,WeightPounds),method = "lm",color=line_col) +
geom_point(aes(Date,WeightPounds),color = 'black') +
ylab("Weight (Lbs)") +
ggtitle(sprintf("Weight over Time for ID %s", i)) +
theme(plot.title = element_text(hjust = 0.5))
ggsave(sprintf("r_images/%s_weight.png", i))
# Get percent change in weight using the initial and final weight measurements
first = dplyr::first(filter(fullData,Id==i)$WeightPounds)
last = dplyr::last(filter(fullData,Id==i)$WeightPounds)
percentChange[nrow(percentChange) + 1,] <- list(i,(last - first)/first,
length(filter(fullData,Id==i)$WeightPounds) > 30)
}
if (length(filter(fullData,Id==i)$SedentaryMinutes) > 1){
ggplot(data=filter(fullData,Id==i)) +
geom_smooth(aes(Date,SedentaryMinutes),method = "lm",color=line_col) +
geom_line(aes(Date,SedentaryMinutes),color = 'black') +
ylab("Minutes Spent Sedentary") +
ggtitle(sprintf("Daily Minutes Spent Sedentary for ID %s", i)) +
theme(plot.title = element_text(hjust = 0.5))
ggsave(sprintf("r_images/%s_sedentary.png", i))
}
if (length(filter(fullData,Id==i)$TotalActiveMinutes) > 1){
ggplot(data=filter(fullData,Id==i)) +
geom_smooth(aes(Date,TotalActiveMinutes),method = "lm",color=line_col) +
geom_line(aes(Date,TotalActiveMinutes),color = 'black') +
ylab("Total Active Minutes") +
ggtitle(sprintf("Daily Minutes Spent Active for ID %s", i)) +
theme(plot.title = element_text(hjust = 0.5))
ggsave(sprintf("r_images/%s_total_activity.png", i))
}
if (length(filter(fullData,Id==i)$WeightedActiveMinutes) > 1){
ggplot(data=filter(fullData,Id==i)) +
geom_smooth(aes(Date,WeightedActiveMinutes),method = "lm",color=line_col) +
geom_line(aes(Date,WeightedActiveMinutes),color = 'black') +
ylab("Weighted Active Minutes") +
ggtitle(sprintf("Daily Minutes Spent Active for ID %s (Weighted)", i)) +
theme(plot.title = element_text(hjust = 0.5))
ggsave(sprintf("r_images/%s_weighted_activity.png", i))
}
}
# Plot percent change in weight
ggplot(data=percentChange[order(percentChange$Change),],
aes(x=Id,y=Change,color = FrequentUser,fill = FrequentUser)) +
geom_bar(stat = 'identity') +
ylab("Percent Change in Weight") +
theme(axis.text.x = element_text(angle = 90, hjust = 0, vjust = 0)) +
scale_color_manual(name='Frequent User',values = setNames(c('red4','blue4'),c(T, F))) +
scale_fill_manual(name='Frequent User',values = setNames(c('red','blue'),c(T, F))) +
scale_y_continuous(labels = scales::percent)
ggsave("r_images/weight_percent_change.png")
# Plot percent change in weight
ggplot(data=percentChange[order(percentChange$Change),],
aes(x=Id,y=Change,color = FrequentUser,fill = FrequentUser)) +
geom_bar(stat = 'identity') +
ylab("Percent Change in Weight") +
theme(axis.text.x = element_text(angle = 90, hjust = 0, vjust = 0)) +
scale_color_manual(name='Frequent User',values = setNames(c('red4','blue4'),c(T, F))) +
scale_fill_manual(name='Frequent User',values = setNames(c('red','blue'),c(T, F))) +
scale_y_continuous(labels = scales::percent)
percentChange <- percentChange[order(percentChange$Change),]
# Plot percent change in weight
ggplot(data=percentChange,
aes(x=Id,y=Change,color = FrequentUser,fill = FrequentUser)) +
geom_bar(stat = 'identity') +
ylab("Percent Change in Weight") +
theme(axis.text.x = element_text(angle = 90, hjust = 0, vjust = 0)) +
scale_color_manual(name='Frequent User',values = setNames(c('red4','blue4'),c(T, F))) +
scale_fill_manual(name='Frequent User',values = setNames(c('red','blue'),c(T, F))) +
scale_y_continuous(labels = scales::percent)
View(percentChange)
View(percentChange)
percentChange <- percentChange[order(percentChange$Change),]
# Plot percent change in weight
ggplot(data=percentChange,
aes(x=Id,y=Change,color = FrequentUser,fill = FrequentUser)) +
geom_bar(stat = 'identity') +
ylab("Percent Change in Weight") +
theme(axis.text.x = element_text(angle = 90, hjust = 0, vjust = 0)) +
scale_color_manual(name='Frequent User',values = setNames(c('red4','blue4'),c(T, F))) +
scale_fill_manual(name='Frequent User',values = setNames(c('red','blue'),c(T, F))) +
scale_y_continuous(labels = scales::percent)
# Plot percent change in weight
ggplot(data=percentChange,
aes(x=factor(Id,level=Id[order(percentChange$Change),]),y=Change,color = FrequentUser,fill = FrequentUser)) +
geom_bar(stat = 'identity') +
ylab("Percent Change in Weight") +
theme(axis.text.x = element_text(angle = 90, hjust = 0, vjust = 0)) +
scale_color_manual(name='Frequent User',values = setNames(c('red4','blue4'),c(T, F))) +
scale_fill_manual(name='Frequent User',values = setNames(c('red','blue'),c(T, F))) +
scale_y_continuous(labels = scales::percent)
# Plot percent change in weight
ggplot(data=percentChange,
aes(x=factor(Id,level=Id[order(percentChange$Change)]),y=Change,color = FrequentUser,fill = FrequentUser)) +
geom_bar(stat = 'identity') +
ylab("Percent Change in Weight") +
theme(axis.text.x = element_text(angle = 90, hjust = 0, vjust = 0)) +
scale_color_manual(name='Frequent User',values = setNames(c('red4','blue4'),c(T, F))) +
scale_fill_manual(name='Frequent User',values = setNames(c('red','blue'),c(T, F))) +
scale_y_continuous(labels = scales::percent)
# Plot percent change in weight
ggplot(data=percentChange,
aes(x=factor(Id,level=Id[order(Change)]),y=Change,color = FrequentUser,fill = FrequentUser)) +
geom_bar(stat = 'identity') +
ylab("Percent Change in Weight") +
theme(axis.text.x = element_text(angle = 90, hjust = 0, vjust = 0)) +
scale_color_manual(name='Frequent User',values = setNames(c('red4','blue4'),c(T, F))) +
scale_fill_manual(name='Frequent User',values = setNames(c('red','blue'),c(T, F))) +
scale_y_continuous(labels = scales::percent)
# Plot percent change in weight
ggplot(data=percentChange,
aes(x=factor(Id,level=Id[order(Change)]),y=Change,color = FrequentUser,fill = FrequentUser)) +
geom_bar(stat = 'identity') +
xlab("Id") +
ylab("Percent Change in Weight") +
theme(axis.text.x = element_text(angle = 90, hjust = 0, vjust = 0)) +
scale_color_manual(name='Frequent User',values = setNames(c('red4','blue4'),c(T, F))) +
scale_fill_manual(name='Frequent User',values = setNames(c('red','blue'),c(T, F))) +
scale_y_continuous(labels = scales::percent)
ggsave("r_images/weight_percent_change.png")
